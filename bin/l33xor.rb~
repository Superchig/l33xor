require 'require_all'
require 'io/console'
require 'json'

require_rel '../lib/'

current_mode_hash_file = File.open("../config.json")
current_mode_hash_file.read

$current_mode = 

def stdin_translation(translation_hash)
  puts "Please input your string:"
    to_l33t = $stdin.gets.chomp

    l33ted = Substitution.hsub(to_l33t, translation_hash)

    puts "Your totally l33t translation:\n"

    puts l33ted

    $stdin.getch
    puts ""
    false
end

def display_configuration(translation_mode)
  puts "Configuration: "

  case translation_mode
  when ReplacementHash::DEFAULT
    puts "Mode: Default"
  when ReplacementHash::HARDCORE
    puts "Mode: Hardcore"
  end
end

def eval_config_input(input)
  should_break = false

  case input.downcase
  when 'd'
    $current_mode = ReplacementHash::DEFAULT
  when 'h'
    $current_mode = ReplacementHash::HARDCORE
  when 'q'
    puts "Quiting configuration."
    should_break = true
  end

  puts ""
  should_break
end

def set_configuration
  loop do
    display_configuration($current_mode)

    puts ""

    puts "Change current translation mode to?"
    puts "d. Default"
    puts "h. Hardcore"
    puts "q. Quit"

    input = $stdin.getch
    break if eval_config_input(input)

    puts ""
  end
end

def eval_choice(choice, translation_hash)
  puts ""

  case choice.downcase
  when 't'
    stdin_translation(translation_hash)
  when 'c'
    set_configuration
  when 'q'
    puts "Quiting..."
    true
  else
    puts "That was not a valid choice."
    puts "Restarting..."
  end
end

loop do
  puts "Welcome to l33xor, a l33t translator written in Ruby.\n"
  puts "t. stdin translation"
  puts "c. Configuration"
  puts "q. Quit"

  choice = $stdin.getch

  break if eval_choice(choice, $current_mode)
end
